/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package practicaGrupal;

import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author alemg
 */
public class InterfazInicioCombate extends javax.swing.JDialog {

    /**
     * Creates new form InterfazInicioCombate
     */
    public InterfazInicioCombate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        for (Personaje pers: registro2.getListaPersonajes()){
            if(pers.getPuedeCombatir()) {
                Pers1.addItem(pers.getNombre() + " " + pers.getID());
                Pers2.addItem(pers.getNombre() + " " + pers.getID());
            }
        }
        try {
            Pers1.setSelectedIndex(-1);
        }
        catch(java.lang.NullPointerException e) {
        
        }
        try {
            Pers2.setSelectedIndex(-1);
        }
        catch(java.lang.NullPointerException e) {
        
        }
        Icon icono = new ImageIcon();
        personaje1.setIcon(icono);
        personaje2.setIcon(icono);
        Area1.setText("");
        Area2.setText("");
        AreaR1.setText("");
        AreaR2.setText("");
        PanelCombate.setVisible(false);
        Pers2.setVisible(false);
    }
    InterfazMain i = new InterfazMain();
    RegistroJuego registro2 = i.getRegistroJuego();
    private static boolean CombateJugador;
    private static Personaje jugador1;
    private static Personaje jugador2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel = new javax.swing.JPanel();
        BotonVolver = new javax.swing.JButton();
        PanelCombate = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        BotonCombateJugador = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        BotonCombateMaquina = new javax.swing.JRadioButton();
        PanelGo = new javax.swing.JPanel();
        BotonGo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        AreaR2 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Area2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        Pers2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Pers1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Area1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        AreaR1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        personaje1 = new javax.swing.JLabel();
        personaje2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono-volver.png"))); // NOI18N
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });
        panel.add(BotonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 600, 60, 50));

        PanelCombate.setOpaque(false);

        jLabel7.setText("Contra jugador");

        buttonGroup1.add(BotonCombateJugador);
        BotonCombateJugador.setOpaque(false);
        BotonCombateJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCombateJugadorActionPerformed(evt);
            }
        });

        jLabel8.setText("Contra m√°quina");

        buttonGroup1.add(BotonCombateMaquina);
        BotonCombateMaquina.setOpaque(false);
        BotonCombateMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCombateMaquinaActionPerformed(evt);
            }
        });

        PanelGo.setOpaque(false);

        BotonGo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icono-vs.png"))); // NOI18N
        BotonGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelGoLayout = new javax.swing.GroupLayout(PanelGo);
        PanelGo.setLayout(PanelGoLayout);
        PanelGoLayout.setHorizontalGroup(
            PanelGoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGoLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(BotonGo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelGoLayout.setVerticalGroup(
            PanelGoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelGoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(BotonGo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelCombateLayout = new javax.swing.GroupLayout(PanelCombate);
        PanelCombate.setLayout(PanelCombateLayout);
        PanelCombateLayout.setHorizontalGroup(
            PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCombateLayout.createSequentialGroup()
                .addGroup(PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCombateLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelCombateLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(BotonCombateJugador)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCombateLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCombateLayout.createSequentialGroup()
                        .addComponent(BotonCombateMaquina)
                        .addGap(62, 62, 62))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCombateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelGo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        PanelCombateLayout.setVerticalGroup(
            PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCombateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelCombateLayout.createSequentialGroup()
                        .addGroup(PanelCombateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonCombateMaquina))
                    .addComponent(BotonCombateJugador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(PanelGo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panel.add(PanelCombate, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 310, 220));

        AreaR2.setEditable(false);
        AreaR2.setColumns(20);
        AreaR2.setRows(5);
        jScrollPane3.setViewportView(AreaR2);

        panel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 347, 220, 226));

        jLabel6.setText("Recursos");
        panel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(804, 316, -1, -1));

        Area2.setEditable(false);
        Area2.setColumns(20);
        Area2.setRows(5);
        jScrollPane2.setViewportView(Area2);

        panel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 149, 224, 134));

        jLabel5.setText("Propiedades personaje");
        panel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(715, 129, 134, -1));

        Pers2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pers2ActionPerformed(evt);
            }
        });
        panel.add(Pers2, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 87, 211, -1));

        jLabel2.setText("Personaje 2");
        panel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 42, 77, -1));

        jLabel1.setText("Personaje 1");
        panel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 42, 66, -1));

        Pers1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pers1ActionPerformed(evt);
            }
        });
        panel.add(Pers1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 87, 209, -1));

        jLabel3.setText("Propiedades personaje");
        panel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 129, 147, -1));

        Area1.setEditable(false);
        Area1.setColumns(20);
        Area1.setRows(5);
        jScrollPane1.setViewportView(Area1);

        panel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 149, 220, 134));

        jLabel4.setText("Recursos");
        panel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 316, 58, -1));

        AreaR1.setEditable(false);
        AreaR1.setColumns(20);
        AreaR1.setRows(5);
        jScrollPane4.setViewportView(AreaR1);

        panel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 341, 220, 232));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/titulo-combate.png"))); // NOI18N
        panel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 210, 70));
        panel.add(personaje1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 140, 130));
        panel.add(personaje2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, 140, 130));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo-combate.png"))); // NOI18N
        panel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 690));

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_BotonVolverActionPerformed

    private void Pers1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pers1ActionPerformed
        buttonGroup1.clearSelection();
        Pers2.setVisible(false);
        Area2.setText("");
        AreaR2.setText("");
        try {
            Pers2.setSelectedIndex(-1);
        }
        catch(java.lang.NullPointerException e) {
        
        }
        String nomId = (String)Pers1.getSelectedItem();
        String id = nomId.substring(nomId.length()-3, nomId.length());
        Personaje pers = registro2.buscarPersonaje(id);
        if (pers instanceof Mago) {
            Area1.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Mago)pers).getPoderMag());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-informalia2 -peq.png"));
            personaje1.setIcon(icono);
        }
        if (pers instanceof Guerrero) {
            Area1.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Habilidad cuerpo a cuerpo: " + 
                    ((Guerrero)pers).getHabCC() + "\n Habilidad a distancia: " + 
                    ((Guerrero)pers).getHabDist());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-guerrero2-peq.png"));
            personaje1.setIcon(icono);
        }
        if (pers instanceof Explorador) {
            Area1.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Explorador)pers).getPoderMag() + "\n Habilidad con arma: " + 
                    ((Explorador)pers).getHabArma());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-explorador2-peq.png"));
            personaje1.setIcon(icono);
        }
        int i=0;
        AreaR1.setText("");
        while((i<3)&&(pers.getListaRecursos()[i]!=null)) {
            Recurso rec = pers.getListaRecursos()[i];
            AreaR1.append(i+1 + ".- " + rec.getNombre() + "\n Bonus ataque: " + rec.getBonusOfen() + "\n Bonus defensa: " + rec.getBonusDefen() + "\n Bonus astucia: " + rec.getBonusAstu() + "\n");
            i++;
        }
        if(Pers1.getSelectedIndex()>-1) {
            PanelCombate.setVisible(true);
            PanelGo.setVisible(false);
        }
        else {
            PanelCombate.setVisible(false);
        }
        Icon icono = new ImageIcon();
        personaje2.setIcon(icono);
    }//GEN-LAST:event_Pers1ActionPerformed

    private void Pers2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pers2ActionPerformed
        String nomId = (String)Pers2.getSelectedItem();
        String id = nomId.substring(nomId.length()-3, nomId.length());
        String nomId2 = (String)Pers1.getSelectedItem();
        String id2 = nomId2.substring(nomId2.length()-3, nomId2.length());
        Personaje pers = registro2.buscarPersonaje(id);
        if (pers instanceof Mago) {
            Area2.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Mago)pers).getPoderMag());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-informalia-peq.png"));
            personaje2.setIcon(icono);
        }
        if (pers instanceof Guerrero) {
            Area2.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Habilidad cuerpo a cuerpo: " + 
                    ((Guerrero)pers).getHabCC() + "\n Habilidad a distancia: " + 
                    ((Guerrero)pers).getHabDist());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-guerrero-peq.png"));
            personaje2.setIcon(icono);
        }
        if (pers instanceof Explorador) {
            Area2.setText(pers.getNombre() + " " + pers.getID() + "\n Destreza: "
                    + pers.getDestreza() + "\n Fuerza: " + pers.getFuerza() +
                    "\n Inteligencia: " + pers.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Explorador)pers).getPoderMag() + "\n Habilidad con arma: " + 
                    ((Explorador)pers).getHabArma());
            Icon icono = new ImageIcon(getClass().getResource("/imagenes/icono-explorador-peq.png"));
            personaje2.setIcon(icono);
        }
        int i=0;
        AreaR2.setText("");
        while((i<3)&&(pers.getListaRecursos()[i]!=null)) {
            Recurso rec = pers.getListaRecursos()[i];
            AreaR2.append(i+1 + ".- " + rec.getNombre() + "\n Bonus ataque: " + rec.getBonusOfen() + "\n Bonus defensa: " + rec.getBonusDefen() + "\n Bonus astucia: " + rec.getBonusAstu() + "\n");
            i++;
        }
        if((Pers1.getSelectedIndex()>-1)&&(Pers2.getSelectedIndex()>-1)&&(!id.equals(id2))) {
            PanelCombate.setVisible(true);
            PanelGo.setVisible(true);
        }
        else {
            PanelCombate.setVisible(true);
            PanelGo.setVisible(false);
        }
    }//GEN-LAST:event_Pers2ActionPerformed

    private void BotonGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGoActionPerformed
        String nomId = (String)Pers1.getSelectedItem();
        String id = nomId.substring(nomId.length()-3, nomId.length());
        jugador1 = registro2.buscarPersonaje(id);
        if(CombateJugador) {
            String nomId2 = (String)Pers2.getSelectedItem();
            String id2 = nomId2.substring(nomId2.length()-3, nomId2.length());
            jugador2 = registro2.buscarPersonaje(id2);
        }
        InterfazCombate c = new InterfazCombate(this, true);
        c.setVisible(true);
    }//GEN-LAST:event_BotonGoActionPerformed

    private void BotonCombateJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCombateJugadorActionPerformed
        Icon icono = new ImageIcon();
        personaje2.setIcon(icono);
        Area2.setText("");
        AreaR2.setText("");
        CombateJugador=true;
        PanelGo.setVisible(false);
        Pers2.setVisible(true);
        try {
            Pers2.setSelectedIndex(-1);
        }
        catch(java.lang.NullPointerException e) {
        
        }
    }//GEN-LAST:event_BotonCombateJugadorActionPerformed

    private void BotonCombateMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCombateMaquinaActionPerformed
        Icon icono = new ImageIcon();
        personaje2.setIcon(icono);
        CombateJugador=false;
        PanelGo.setVisible(true);
        Pers2.setVisible(false);
        int i = Pers1.getItemCount();
        String nomId = (String)Pers1.getSelectedItem();
        String id = nomId.substring(nomId.length()-3, nomId.length());
        String id2 = "";
        do {
            int j = (int)(Math.random()*i);
            String nomId2 = Pers2.getItemAt(j);
            id2 = nomId2.substring(nomId2.length()-3, nomId2.length());
        } while (id.equals(id2));
        jugador2 = registro2.buscarPersonaje(id2);
        if (jugador2 instanceof Mago) {
            Area2.setText(jugador2.getNombre() + " " + jugador2.getID() + "\n Destreza: "
                    + jugador2.getDestreza() + "\n Fuerza: " + jugador2.getFuerza() +
                    "\n Inteligencia: " + jugador2.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Mago)jugador2).getPoderMag());
            icono = new ImageIcon(getClass().getResource("/imagenes/icono-informalia-peq.png"));
            personaje2.setIcon(icono);
            
        }
        if (jugador2 instanceof Guerrero) {
            Area2.setText(jugador2.getNombre() + " " + jugador2.getID() + "\n Destreza: "
                    + jugador2.getDestreza() + "\n Fuerza: " + jugador2.getFuerza() +
                    "\n Inteligencia: " + jugador2.getInteligencia() + "\n Habilidad cuerpo a cuerpo: " + 
                    ((Guerrero)jugador2).getHabCC() + "\n Habilidad a distancia: " + 
                    ((Guerrero)jugador2).getHabDist());
            icono = new ImageIcon(getClass().getResource("/imagenes/icono-guerrero-peq.png"));
            personaje2.setIcon(icono);
        }
        if (jugador2 instanceof Explorador) {
            Area2.setText(jugador2.getNombre() + " " + jugador2.getID() + "\n Destreza: "
                    + jugador2.getDestreza() + "\n Fuerza: " + jugador2.getFuerza() +
                    "\n Inteligencia: " + jugador2.getInteligencia() + "\n Poder m√°gico: " + 
                    ((Explorador)jugador2).getPoderMag() + "\n Habilidad con arma: " + 
                    ((Explorador)jugador2).getHabArma()); 
            icono = new ImageIcon(getClass().getResource("/imagenes/icono-explorador-peq.png"));
            personaje2.setIcon(icono);
        }
        int k=0;
        AreaR2.setText("");
        while((k<3)&&(jugador2.getListaRecursos()[k]!=null)) {
            Recurso rec = jugador2.getListaRecursos()[k];
            AreaR2.append(k+1 + ".- " + rec.getNombre() + "\n Bonus ataque: " + rec.getBonusOfen() + "\n Bonus defensa: " + rec.getBonusDefen() + "\n Bonus astucia: " + rec.getBonusAstu() + "\n");
            k++;
        }

    }//GEN-LAST:event_BotonCombateMaquinaActionPerformed

    public boolean getCombateJugador() {
        return CombateJugador;
    }
    
    public Personaje getJugador1() {
        return jugador1;
    }
    
    public Personaje getJugador2() {
        return jugador2;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazInicioCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazInicioCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazInicioCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazInicioCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InterfazInicioCombate dialog = new InterfazInicioCombate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Area1;
    private javax.swing.JTextArea Area2;
    private javax.swing.JTextArea AreaR1;
    private javax.swing.JTextArea AreaR2;
    private javax.swing.JRadioButton BotonCombateJugador;
    private javax.swing.JRadioButton BotonCombateMaquina;
    private javax.swing.JButton BotonGo;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JPanel PanelCombate;
    private javax.swing.JPanel PanelGo;
    private javax.swing.JComboBox<String> Pers1;
    private javax.swing.JComboBox<String> Pers2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel personaje1;
    private javax.swing.JLabel personaje2;
    // End of variables declaration//GEN-END:variables
}
